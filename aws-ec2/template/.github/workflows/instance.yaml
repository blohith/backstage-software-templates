name: Create an EC2 Instance

on:
  workflow_dispatch:
    inputs:
      instanceName:
        description: 'Name of the AWS Instance'
        required: true
      awsRegion:
        description: 'AWS Region for the instance'
        required: true
      instanceType:
        description: 'AWS instance type'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true

jobs:
  apply_ec2:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.awsRegion }}

      - name: Install Terraform
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gnupg software-properties-common && \
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg && \
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list && \
          sudo apt-get update && \
          sudo apt-get install -y terraform

      - name: Terraform Init
        run: terraform init
        working-directory: .

      - name: Terraform Format
        run: terraform fmt
        working-directory: .

      - name: Terraform Validate
        run: terraform validate
        working-directory: .

      - name: Terraform Apply
        run: |
          terraform apply \
            -var "instanceName=${{ github.event.inputs.instanceName }}" \
            -var "awsRegion=${{ github.event.inputs.awsRegion }}" \
            -var "instanceType=${{ github.event.inputs.instanceType }}" \
            -auto-approve
        working-directory: .

  destroy_instance:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Terraform
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gnupg software-properties-common && \
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg && \
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list && \
          sudo apt-get update && \
          sudo apt-get install -y terraform

      - name: Terraform Init
        run: terraform init
        working-directory: .

      - name: Terraform Format
        run: terraform fmt
        working-directory: .

      - name: Terraform Destroy
        run: |
          terraform destroy \
            -var "instanceName=${{ github.event.inputs.instanceName }}" \
            -var "awsRegion=${{ github.event.inputs.awsRegion }}" \
            -var "aws_access_key=${{ env.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ env.AWS_SECRET_ACCESS_KEY }}" \
            -auto-approve
        working-directory: .
